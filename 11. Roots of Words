#include <iostream>
#include <vector>
#include <fstream>
#include <string>

using namespace std;

bool begins(string b, string s)
{
	if (s.length() < b.length())
		return false;
	return s.substr(0, b.length()) == b;
}

int main()
{
	string word;
	vector <string> v;
	ifstream in("Test1.txt");
	if (!in.is_open())
		return 1;
	while (getline(in, word, ' '))
		{
			string::size_type from = word.find_first_not_of(" \t\n\r"), to = word.find_last_not_of(" \t\n\r");
			if (from == (size_t)-1 || to == (size_t)-1)
				continue;
			v.push_back(word.substr(from, to + 1));
		}
	in.close();

	cout << "have " << v.size() + 1 << " words" << endl;

	int len = 0, m, bm = 0, a, ind1 = 0, ind2 = 0;

	for (int i = 0; i < v.size(); i++)
	{
		m = 0;
		for (int j = 0; j < v.size(); j++)
		{
			if (i != j && begins(v[i], v[j])) m++;
			if (m > 0)
			{
				if (v[i].length() > len)
				{
					ind1 = i;
					len = v[i].length();
				}
				if (m > bm)
				{
					ind2 = i;
					bm = m;
				}
			}
		}
	}
	
	cout << "The longest base is " << v[ind1] << endl;
	cout << "The most important base is " << v[ind2] << endl;

	vector <string> v1;

	for (int j = 0; j < v.size(); j++)
	{
		if (ind1 != j && begins(v[ind1], v[j]))
		{
			v1.push_back(v[j]);
		}
	}		
	
	ofstream out;
	out.open("Result1.txt");
	if (out.is_open())
	{
		out << "Longest root word: " << v[ind1] << endl;
			a = v1.size();
			if (a != 0)
			{
				for (int i = 0; i < a; i++)
				{
					out << v1[i] << ' ';
				}
			}
			else out << "NO";
	}	
	out.close();
	out.open("Result2.txt");
	if (out.is_open())
	{
		out << "Most significant root word: " << v[ind2] << endl << "Amount: ";
		if (bm != 0) out << bm;
		else out << "NO";
	}
}
